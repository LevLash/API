version: '3.3'
services:

  nginx:
      image: nginx:1.17-alpine
      container_name: nginx_robots
      restart: always
      ports:
        - "80:80"
        - "5173:5173"
      environment:
        XDEBUG_MODE: 'on'
        XDEBUG_CONFIG: 'client_host=host.docker.internal'
      volumes:
        - ./project:/var/www
        - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      depends_on:
        - php-fpm
      links:
        - php-fpm
      networks:
        - default

  php-fpm:
      build: ./docker/php
      restart: always
      working_dir: /var/www
      container_name: php-fpm-robots
      volumes:
        - ./project:/var/www
#        - ./docker/nginx/null.ini:/usr/local/etc/php/conf.d/docker-php-ext-psr.ini
      environment:
        - ENV_SUBSTITUTION_ENABLE=true
        - PHP_MEMORY_LIMIT=512M
        - PHP_FPM_LISTEN=9000
        - PHP_SESSION_GC_MAXLIFETIME=7200
      expose:
        - 9000
      networks:
        - default

  mysql:
      image: 'mysql/mysql-server:8.0'
      container_name: mysql-robots
      restart: always
      ports:
        - '3306:3306'
      environment:
        MYSQL_ROOT_PASSWORD: '1'
        MYSQL_DATABASE: 'robots'
        MYSQL_USER: 'root'
        MYSQL_PASSWORD: '1'
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
        DB_DATABASE: 'robots'
        DB_USERNAME: 'root'
        DB_PASSWORD: '1'
      volumes:
        - ./docker/mysql:/var/log
        - ./docker/mysql/dbdata:/var/lib/mysql
      healthcheck:
        test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
        retries: 3
        timeout: 5s
      networks:
        - default

  client-backend:
    image: auth-ms:0.0.1
    build:
      dockerfile: ./../docker/java/Dockerfile
      context: ./Robot-control-app/
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
    networks:
      - default

  mongo:
    container_name: mongo
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: username
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: robot_app
    volumes:
      - mongo:/data/db
    ports:
      - "27017:27017"
    networks:
      - default
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  mongo:
